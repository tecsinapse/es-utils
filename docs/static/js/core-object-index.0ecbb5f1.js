(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./core/object/index.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return g});var t=a("./node_modules/react/index.js"),m=a.n(t),o=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,n){if(null==e)return{};var a,t,m=function(e,n){if(null==e)return{};var a,t,m={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(m[a]=e[a]);return m}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(m[a]=e[a])}return m}function p(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function c(e,n){return!n||"object"!==r(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var g=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=c(this,s(n).call(this,e))).layout=null,a}var a,t,r;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,m.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;l(e,["components"]);return m.a.createElement(o.MDXTag,{name:"wrapper",components:n},m.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"object-utils-api"}},"Object Utils API"),m.a.createElement(o.MDXTag,{name:"blockquote",components:n},m.a.createElement(o.MDXTag,{name:"h3",components:n,parentName:"blockquote",props:{id:"note"}},"Note"),m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"blockquote"},"By default, this functions were tested only in ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ES6")," environments.",m.a.createElement("br",null),"\nAll are exported at ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"/tecsinapse-es-utils/core/object/index.js"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"cleanarrayaarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"cleanArray(a):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.cleanArray")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This functions removes any duplicate item at an array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"a: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"a")," array without duplicates")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { cleanArray } from '@tecsinapse/es-utils/core/object'\n\nconst arrayTest = [1, 2, 3, 4, 5, 5, 5];\n\nconsole.log(\"cleanArray: \" +  cleanArray(arrayTest));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"cleanArray: 1,2,3,4,5"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"flatmapf-xsarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"flatMap(f, xs):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.flatMap")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This functions flats a array using the 'f' function to determine final itens of the array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-1"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"f: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"function"),m.a.createElement("br",null),"\nThe flat function")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"xs: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"[]"),m.a.createElement("br",null),"\nThe input array"))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-1"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"xs")," flated using ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"f")," function.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-1"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { flatMap } from '@tecsinapse/es-utils/core/object'\n\nconst flatArrayTest = [[1, 2], [3, 4], [5, 6]];\n\nconsole.log(\"flatMap: \" +  flatMap(v => v, flatArrayTest));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"flatMap: 1,2,3,4,5,6"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"concatx-yarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"concat(x, y):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.concat")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This functions perforns concatenation between two arrays ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"x")," and ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"y")," and return ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"xy")," array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-2"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"x: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"[]"),m.a.createElement("br",null),"\nFirst array input")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"y: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"[]"),m.a.createElement("br",null),"\nSecond array input"))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-2"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"xy")," concatened array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-2"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { concat } from '@tecsinapse/es-utils/core/object'\n\nconst arrayTest = [1, 2, 3, 4, 5, 5, 5];\nconst arrayTestConcat = [6, 7, 8, 9, 10, 11, 12];\n\nconsole.log(\"concat: \" +  concat(arrayTest, arrayTestConcat));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"concat: 1,2,3,4,5,5,5,6,7,8,9,10,11,12"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"flattenarrayofarraysarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"flatten(arrayOfArrays):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.flatten")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This functions flats an array of arrays."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-3"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"arrayOfArrays: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input array of arrays")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-3"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"arrayOfArrays")," flated.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-3"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { flatten } from '@tecsinapse/es-utils/core/object'\n\nconst flattenTest = [[1, 2, 3], [4, 5, 6]];\n\nconsole.log(\"flatten: \" + flatten(flattenTest));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"flatten: 1,2,3,4,5,6"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"removeduplicatesmyarr-proparray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"removeDuplicates(myArr, prop):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.removeDuplicates")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This function removes the duplicate itens of the field ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"prop")," inside ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"myArr")," array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-4"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"myArr: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"[]"),m.a.createElement("br",null),"\nThe input array.")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"prop: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string"),m.a.createElement("br",null),"\nThe field name wich functions will verify oneness, it's not allow to use deep fields."))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-4"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"myArr")," with duplicates removed.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-4"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { removeDuplicates } from '@tecsinapse/es-utils/core/object'\n\nconst removeDuplicatesTest = [\n  {id: 1},\n  {id: 1},\n  {id: 2}\n];\n\nconsole.log(\"removeDuplicates: \" +  removeDuplicates(removeDuplicatesTest, 'id'));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"removeDuplicates: [object Object],[object Object]")," (it have showed only two of three)")),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"omitdeepobj-keyarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"omitDeep(obj, key):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.omitDeep")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This function removes the field with name ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"key")," inside the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"obj")," object."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-5"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"obj: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"{}"),m.a.createElement("br",null),"\nThe input object.")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"key: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string"),m.a.createElement("br",null),"\nThe field key that will be removed."))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-5"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"obj")," with ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"key")," removed.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-5"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { omitDeep } from '@tecsinapse/es-utils/core/object'\n\nconst omitDeepTest = {\n  omit: true,\n  notOmit: true\n};\n\nlet omitDeep1 = omitDeep(omitDeepTest, 'omit');\nconsole.log(\"omitDeep: \" + omitDeep1.omit + \" - \"  + omitDeep1.notOmit );\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"omitDeep: undefined - true"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"omitdeeparraywalkarr-keyarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"omitDeepArrayWalk(arr, key):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.omitDeepArrayWalk")),m.a.createElement(o.MDXTag,{name:"p",components:n},"This function removes the field with name ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"key")," of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"arr")," itens."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-6"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"arr: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"[]"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"key: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string"),m.a.createElement("br",null),"\nThe field key that will be removed."))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-6"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"arr")," with ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"key")," removed.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-6"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { omitDeepArrayWalk } from '@tecsinapse/es-utils/core/object'\n\nconst omitDeepArrayWalkTest = [\n  {id:1, vector: 1},\n  {id:2, vector: 2},\n  {id:3, vector: 3},\n];\n\nconsole.log(\"omitDeepArrayWalk: \" + omitDeepArrayWalk(omitDeepArrayWalkTest, 'vector').map(c=>c.id));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"omitDeepArrayWalk: 1,2,3"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"resolveobjpath-objarray"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"resolveObj(path, obj):Array")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.resolveObj")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Get the item at the path ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"path")," of the ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"\xf2bj")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-7"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"\xf2bj: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"{}"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"key: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string"),m.a.createElement("br",null),"\nThe field key that will be get."))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-7"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"key")," field of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"obj"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-7"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { resolveObj } from '@tecsinapse/es-utils/core/object'\n\nconst resolveObjectTest = {\n  clientes: {\n    id: 1,\n  }\n};\n\nconsole.log(\"resolveObj: \" +  resolveObj('clientes.id', resolveObjectTest));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"resolveObj: 1"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"truncatestringstring-maxstring"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"truncateString(string, max):String")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.truncateString")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Trucante an string after ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"max")," characters and add ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"...")," characters at string's end."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-8"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"string: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string"),m.a.createElement("br",null),"\nThe input string.")),m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"p",components:n,parentName:"li"},"max: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"int"),m.a.createElement("br",null),"\nMax number o characters to truncate, the default value is ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"30"),"."))),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-8"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"key")," field of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"obj"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-8"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { resolveObj } from '@tecsinapse/es-utils/core/object'\n\nconst truncateStringTeste = 'abcdefghi';\nconst truncateStringMaxTest = 5;\n\nconsole.log(\"truncateString: \" +  truncateString(truncateStringTeste, truncateStringMaxTest));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"truncateString: abcd..."))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"isstringnotblankstringboolean"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"isStringNotBlank(string):Boolean")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.isStringNotBlank")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Verify if string is not ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"''"),"."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-9"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"string: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"string"),m.a.createElement("br",null),"\nThe input string.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-9"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return wheter string equals ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"''")," or not.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-9"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { isStringNotBlank } from '@tecsinapse/es-utils/core/object'\n\nconsole.log(\"isStringNotBlank: \" +  isStringNotBlank(''));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"isStringNotBlank: false"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"verifyifstringstringboolean"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"verifyIfString(string):Boolean")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.verifyIfString")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Checks if ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"string")," is type of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"String")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-10"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"string: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"string"),m.a.createElement("br",null),"\nThe input object.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-10"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"true")," if string, otherwise ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"not"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-10"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { verifyIfString } from '@tecsinapse/es-utils/core/object'\n\nconsole.log(\"verifyIfString: \" +  verifyIfString(''));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"verifyIfString: true"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"isemptyornullvalueboolean"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"isEmptyOrNull(value):Boolean")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.isEmptyOrNull")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Checks if ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"value")," object is not empty."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-11"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"value: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"{}"),m.a.createElement("br",null),"\nThe input object.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-11"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"true")," if empty, otherwise ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"not"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-11"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { isEmptyOrNull } from '@tecsinapse/es-utils/core/object'\n\nconsole.log(\"isEmptyOrNull: \" + isEmptyOrNull(''));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"isEmptyOrNull: true"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"isnotemptyornullvalueboolean"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"isNotEmptyOrNull(value):Boolean")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.isNotEmptyOrNull")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns negation of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.isEmptyOrNull"),"."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-12"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"value: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"{}"),m.a.createElement("br",null),"\nThe input object.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-12"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"true")," if not empty, otherwise ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"not"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-12"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { isNotEmptyOrNull } from '@tecsinapse/es-utils/core/object'\n\nconsole.log(\"isNotEmptyOrNull: \" + isNotEmptyOrNull(''));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"isNotEmptyOrNull: false"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"getanyfromarrayarrayobject"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"getAnyFromArray(array):Object")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.getAnyFromArray")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns any element of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"array")," array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-13"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"array: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-13"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return first element of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"array"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-13"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { getAnyFromArray } from '@tecsinapse/es-utils/core/object'\n\nconst getLastFromArrayOrObjectTeste = [0, '1'];\n\nconsole.log(\"getAnyFromArray: \" + getAnyFromArray(getLastFromArrayOrObjectTeste));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getAnyFromArray: 0"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"getfirstfromsingleelementarrayarrayobject"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"getFirstFromSingleElementArray(array):Object")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.getFirstFromSingleElementArray")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns the first item of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"array")," array if it has a single item."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-14"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"array: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-14"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return first element of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"array"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-14"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { getFirstFromSingleElementArray } from '@tecsinapse/es-utils/core/object'\n\nconst getFirstFromSingleElementArrayTeste = [null];\n\nconsole.log(\"getFirstFromSingleElementArray: \" + getFirstFromSingleElementArray(getFirstFromSingleElementArrayTeste));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getFirstFromSingleElementArray: null"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"getfirstfromsingleelementarraynotnullarrayobject"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"getFirstFromSingleElementArrayNotNull(array):Object")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.getFirstFromSingleElementArrayNotNull")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns the first item of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"array")," array if it have a single item and it's not null."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-15"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"array: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-15"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return first element of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"array"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-15"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { getFirstFromSingleElementArrayNotNull } from '@tecsinapse/es-utils/core/object'\n\nconst getFirstFromSingleElementArrayNotNullTeste = ['1'];\n\nconsole.log(\"getFirstFromSingleElementArrayNotNull: \" + getFirstFromSingleElementArrayNotNull(getFirstFromSingleElementArrayNotNullTeste));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getFirstFromSingleElementArrayNotNull: 1"))),m.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"getlastfromarrayorobjectarrayobject"}},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"getLastFromArrayOrObject(array):Object")),m.a.createElement(o.MDXTag,{name:"p",components:n},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"objUtils.getLastFromArrayOrObject")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Returns the last item of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"array")," array."),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"parameters-16"}},"Parameters"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"array: ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"[]"),m.a.createElement("br",null),"\nThe input Array.")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"output-16"}},"Output"),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},"Return last item of ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"array")," or ",m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"{}"),".")),m.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"examples-16"}},"Examples"),m.a.createElement(o.MDXTag,{name:"pre",components:n},m.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { getLastFromArrayOrObject } from '@tecsinapse/es-utils/core/object'\n\nconst getLastFromArrayOrObjectTeste = [0, '1'];\n\nconsole.log(\"getLastFromArrayOrObject: \" + getLastFromArrayOrObject(getLastFromArrayOrObjectTeste));\n")),m.a.createElement(o.MDXTag,{name:"p",components:n},"Expected output: ",m.a.createElement("br",null)),m.a.createElement(o.MDXTag,{name:"ul",components:n},m.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"getLastFromArrayOrObject: 1"))))}}])&&p(a.prototype,t),r&&p(a,r),n}();g.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=core-object-index.11dfb8f9a380419c54eb.js.map